AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infraestructura completa para agente auto-hospedado de Azure Pipelines en AWS Free Tier'

Parameters:
  KeyPairName:
    Description: 'Nombre del par de claves EC2 existente para conexion SSH'
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: 'Debe ser el nombre de un par de claves EC2 existente'
  MyIPAddress:
    Description: 'Tu dirección IP pública (se pedirá al desplegar)'
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: 'Debe ser una dirección IP válida con formato CIDR (ej. 203.0.113.25/32)'

Resources:
  # 1. Creacion de la VPC
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: 'VPC-AzurePipelinesAgent'

  # 2. Creacion del Internet Gateway
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: 'IGW-AzurePipelinesAgent'

  # 3. Asociacion del IGW a la VPC
  GatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # 4. Creacion de la Subnet pública
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'PublicSubnet-AzurePipelinesAgent'

  # 5. Creacion de la tabla de rutas pública
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'PublicRouteTable'

  # 6. Ruta por defecto hacia Internet
  DefaultRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  # 7. Asociacion de la subnet pública con la tabla de rutas
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # 8. Grupo de seguridad para la instancia
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security Group for Azure Pipelines Agent'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        # Regla 1: SSH solo desde tu IP (reemplaza con tu IP pública)
        - IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIPAddress
          Description: 'SSH access from my IP'
        
        # Regla 2: Puertos efímeros para comunicación con Azure DevOps
        - IpProtocol: 'tcp'
          FromPort: 1024
          ToPort: 65535
          CidrIp: '0.0.0.0/0'
          Description: 'Ephemeral ports for Azure DevOps'
      
      SecurityGroupEgress:
        # Solo permitir tráfico saliente necesario
        - IpProtocol: 'tcp'
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'
          Description: 'Outbound HTTPS to Azure DevOps'
        
        - IpProtocol: 'tcp'
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
          Description: 'Outbound HTTP (for agent download)'
        
        - IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
          Description: 'Outbound SSH (optional for git)'

  # 9. Rol de IAM para la instancia
  InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      PAth: '/'
      Policies:
        - PolicyName: 'EC2InstancePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  
  # 10. Asociar el rol a la instancia
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref InstanceRole


  # 9. Instancia EC2 (Free Tier eligible)
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: 't2.micro'
      ImageId: 'ami-0953476d60561c955'  # Amazon Linux 2023 en us-east-1
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref InstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - !Ref InstanceSecurityGroup
          SubnetId: !Ref PublicSubnet
      BlockDeviceMappings:
        - DeviceName: '/dev/xvda'
          Ebs:
            VolumeSize: 30 # 30 GiB - maximo del Free Tier
            VolumeType: 'gp3' # General Purpose SSD
            DeleteOnTermination: true
      Tags:
        - Key: 'Name'
          Value: 'AzurePipelinesAgent'
      

Outputs:
  InstancePublicDNS:
    Description: 'DNS público de la instancia para conectarse via SSH'
    Value: !GetAtt EC2Instance.PublicDnsName
  InstancePublicIP:
    Description: 'IP pública de la instancia'
    Value: !GetAtt EC2Instance.PublicIp
  VPCId:
    Description: 'ID de la VPC creada'
    Value: !Ref VPC
  SubnetId:
    Description: 'ID de la subred creada'
    Value: !Ref PublicSubnet
  SecurityGroupId:
    Description: 'ID del grupo de seguridad'
    Value: !GetAtt InstanceSecurityGroup.GroupId
  ConnectionInstructions:
    Description: 'Instrucciones para conectarse y configurar el agente'
    Value: !Sub |
      Conéctate via SSH: ssh -i ${KeyPairName}.pem ec2-user@${EC2Instance.PublicDnsName}
      Las instrucciones completas estan en /home/ec2-user/README.txt